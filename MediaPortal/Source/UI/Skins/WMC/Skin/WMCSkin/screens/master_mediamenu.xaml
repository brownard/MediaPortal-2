<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for standard menu screens:
On top the window buttons, the player controls and the notification symbol,
at the left side the menu,
at the right side the content pane and
at the bottom the navbar.

The contents (Contents_Template) are displayed inside a GroupBox.
If an alternative contents display should be used,
the element Alternative_Contents_Element can be used; in that case, no
surrounding GroupBox will be used.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_menu.xaml">
    <Include.Resources>
      <ResourceWrapper x:Key="Header_Text">
        [Header text]
      </ResourceWrapper>

      <!- Either ->
      <ControlTemplate x:Key="Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>
      <!- Or ->
      <ControlTemplate x:Key="Alternative_Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>

    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Header_Text (String): The text to be displayed as header. Only used when Contents_Template is given.
 - Contents_Template (ConrolTemplate): Template for the contents to be displayed
   in the content area at the right side, inside a GroupBox.
 - Alternative_Contents_Template (ControlTemplate): Template of the contents to be displayed
   in the content area at the right side, without a GroupBox.
-->

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_bare.xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    >
  <Include.Resources>

    <!-- Header has to be defined by the includer: "Header_Text" -->

    <ControlTemplate x:Key="FanArtBackground_Template">
      <ControlTemplate.Resources>
        <fanart:FanArtImageSourceConverter x:Key="FanArtImageSourceConverter"/>
        <Model x:Key="FanArtBackgroundModel" Id="8F42C8E9-E8A3-475C-A50A-99E1E644DC91"/>
        <Model x:Key="SkinSettingsModel" Id="13961014-16C4-4361-9751-8E2C585EFD44"/>
      </ControlTemplate.Resources>
      <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Image x:Name="FanArtImageBackground" Stretch="UniformToFill"
                     IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableFanart}">
          <Image.Source>
            <ImageSourceWrapper Delay="0.5" DelayInOut="true" Transition="transitions\dissolve" TransitionDuration="0.5"
                   Source="{Binding Source={StaticResource FanArtBackgroundModel}, Path=ImageSource, Converter={StaticResource FanArtImageSourceConverter}, ConverterParameter=FanArt;1920;1080;False}"/>
          </Image.Source>
        </Image>

        <Image Stretch="Fill" Opacity="1">
          <Image.Source>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{GridLayout} ? {1} : ({0} == {LayoutType}.{ListLayout} ? {2} : {3})">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <Binding Source="Background_GridView.png"/> <!--Grid-->
              <Binding Source="Background_ListView.png"/> <!--List-->
              <Binding Source="Background_GridView.png"/> <!--Cover-->
            </MultiBinding>
          </Image.Source>
        </Image>
      </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="Client_Template">
      <DockPanel LastChildFill="True" Margin="10">
        <DockPanel.Resources>
          <Model x:Key="MenuModel" Id="9E9D0CD9-4FDB-4c0f-A0C4-F356E151BDE0"/>
        </DockPanel.Resources>
        <ListView x:Name="TopMenu" DockPanel.Dock="Top" Margin="10,0,20,10" Style="{ThemeResource TopMenuListViewStyle}" Height="90"
            VerticalAlignment="Top" HorizontalAlignment="Stretch" SetFocusPrio="Fallback" RestoreFocus="True"
            ItemsSource="{Binding Source={StaticResource MenuModel},Path=MenuItems,Mode=OneTime,Converter={StaticResource ExcludeItemsListActionFilter},ConverterParameter={StaticResource ActionIdFilter}}">
          <ListView.Resources>
            <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
          </ListView.Resources>
          <ListView.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType" 
                     Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutType}.{ListLayout}"/>
          </ListView.IsVisible>
        </ListView>

        <!-- Order matters here: The content control has to be the last control to fill the rest of the space -->
        <Grid x:Name="ContentPanel" SetFocusPrio="DefaultLow">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <GroupBox x:Name="ContentGroupBox" Grid.Row="0" Grid.Column="0" Margin="0,-15,0,0" 
              Header="{Binding Source={DynamicResource ResourceKey=Header_Text},Path=Resource}" DockPanel.Dock="Center"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              IsVisible="{Binding ElementName=ContentControl,Path=Template,Converter={StaticResource ReferenceToBoolConverter}}"
              Style="{ThemeResource ContentGroupBoxStyle}">
            <Control x:Name="ContentControl" Template="{DynamicResource ResourceKey=Contents_Template}" SetFocus="true"/>
          </GroupBox>
          <Control x:Name="AlternativeContentControl" Grid.Row="0" Grid.Column="0"
             VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
             Template="{DynamicResource ResourceKey=Alternative_Contents_Template}"
             IsVisible="{Binding RelativeSource={RelativeSource Self},Path=Template,Converter={StaticResource ReferenceToBoolConverter}}"/>

          <Grid x:Name="RightPanel" Margin="0,80,-650,-80" VerticalAlignment="Stretch"
              Width="650" HorizontalAlignment="Right">
            <Grid.IsVisible>
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"
                     Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout}"/>
            </Grid.IsVisible>
            <Grid.Resources>
              <Storyboard x:Key="SlideInStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="RenderTransform.X">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="-550"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SlideOutStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="RenderTransform.X">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-550"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsMouseOver" Value="False" />
                  <Condition Binding="{Binding ElementName=MainMenu, Path=CurrentItem}" Value="{x:Null}" />
                  <Condition Binding="{Binding ElementName=MenuShowButton, Path=HasFocus}" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                  <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                  <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=OpenMenu}"/>
                </MultiTrigger.ExitActions>
              </MultiTrigger>
              <!-- Setting default state of menu to hidden -->
              <EventTrigger RoutedEvent="Screen.Show">
                <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
              </EventTrigger>
              <!-- Slide-In animation when the MenuModel.ShowMenu gets true -->
              <DataTrigger Binding="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard x:Name="SlideIn_BeginStoryboard" Storyboard="{ThemeResource SlideInStoryboard}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="SlideOut_BeginStoryboard" Storyboard="{ThemeResource SlideOutStoryboard}"/>
                  <StopStoryboard BeginStoryboardName="SlideIn_BeginStoryboard"/>
                </DataTrigger.ExitActions>
                <Setter TargetName="MainMenu" Property="SetFocusPrio" Value="Highest" />
                <Setter TargetName="MainMenu" Property="SetFocus" Value="True" />
                <Setter Property="Grid.ZIndex" Value="1000.0"/>
              </DataTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="550"/>
              <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TranslateTransform X="0"/>
            </Grid.RenderTransform>
            <Border x:Name="DialogBorder" Margin="10,0,67,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="3">
              <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
                  <GradientStop Color="#8CFFFFFF" Offset="0"/>
                  <GradientStop Color="#8CFFFFFF" Offset="0.7"/>
                  <GradientStop Color="#8CFFFFFF" Offset="1"/>
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Border.Background>
                <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                  <GradientStop Color="#F2447da7" Offset="0"/>
                  <GradientStop Color="#F2124273" Offset="1"/>
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <ListView x:Name="MainMenu" Grid.Column="0" Style="{ThemeResource SlideMenuListViewStyle}" Margin="20,30,90,30"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SetFocusPrio="Default" RestoreFocus="True"
              ItemsSource="{Binding Source={StaticResource MenuModel},Path=MenuItems,Mode=OneTime}"
              IsEnabled="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}">
              <ListView.Resources>
                <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
              </ListView.Resources>
            </ListView>
            <Button x:Name="MenuShowButton" Content="Menu" Style="{ThemeResource ButtonWideStyle}"
                  Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Height="50" Margin="-30,0,0,0"
                  IsEnabled="{Binding Source={StaticResource MenuModel},Path=!IsMenuOpen}"
                  Command="{Command Source={StaticResource MenuModel}, Path=ToggleMenu}">
              <Image Source="Right_Menu.png" Stretch="Uniform" Margin="0,0,0,0"/>
            </Button>
          </Grid>

          <!--Grid x:Name="OthersPanel" Margin="0,-850,0,0" VerticalAlignment="Top"
              Width="650" Height="650" HorizontalAlignment="Center">
            <Grid.IsVisible>
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"
                       Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutType}.{ListLayout}"/>
            </Grid.IsVisible>
            <Grid.Resources>
              <Storyboard x:Key="SlideDownStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="OthersPanel" Storyboard.TargetProperty="RenderTransform.Y">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="650"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SlideUpStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="OthersPanel" Storyboard.TargetProperty="RenderTransform.Y">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="650"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsKeyboardFocusWithin" Value="False" />
                  <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                  <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                  <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=OpenMenu}"/>
                </MultiTrigger.ExitActions>
              </MultiTrigger>
              <EventTrigger RoutedEvent="Screen.Show">
                <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
              </EventTrigger>
              <DataTrigger Binding="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard x:Name="SlideDown_BeginStoryboard" Storyboard="{ThemeResource SlideDownStoryboard}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="SlideUp_BeginStoryboard" Storyboard="{ThemeResource SlideUpStoryboard}"/>
                  <StopStoryboard BeginStoryboardName="SlideDown_BeginStoryboard"/>
                </DataTrigger.ExitActions>
                <Setter TargetName="OthersMenu" Property="SetFocusPrio" Value="Highest" />
                <Setter TargetName="OthersMenu" Property="SetFocus" Value="True" />
                <Setter Property="Grid.ZIndex" Value="1000.0"/>
              </DataTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="100"/>
              <RowDefinition Height="550"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TranslateTransform Y="0"/>
            </Grid.RenderTransform>
            <Border Grid.Row="1" Grid.Column="0" Margin="10,0,67,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="3">
              <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
                  <GradientStop Color="#8CFFFFFF" Offset="0"/>
                  <GradientStop Color="#8CFFFFFF" Offset="0.7"/>
                  <GradientStop Color="#8CFFFFFF" Offset="1"/>
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RadiusX="4" RadiusY="4" Margin="-1">
                <Rectangle.Fill>
                  <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                    <GradientStop Color="#F2447da7" Offset="0"/>
                    <GradientStop Color="#F2124273" Offset="1"/>
                  </LinearGradientBrush>
                </Rectangle.Fill>
              </Rectangle>
            </Border>
            <ListView x:Name="OthersMenu" Grid.Row="1" Style="{ThemeResource SlideMenuListViewStyle}" Margin="20,30,90,30"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SetFocusPrio="Default"
              ItemsSource="{Binding Source={StaticResource MenuModel},Path=MenuItems,Mode=OneTime,Converter={StaticResource IncludeItemsListActionFilter},ConverterParameter={StaticResource ActionIdFilter}}"
              IsEnabled="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}">
              <ListView.Resources>
                <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
              </ListView.Resources>
            </ListView>
            <Button x:Name="OtherMenuShowButton" Content="Menu" Style="{ThemeResource ButtonWideStyle}"
                  Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="50" Margin="0,0,0,-40"
                  IsEnabled="{Binding Source={StaticResource MenuModel},Path=!IsMenuOpen}"
                  Command="{Command Source={StaticResource MenuModel}, Path=ToggleMenu}">
              <Button.IsVisible>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} > 0">
                  <Binding ElementName="OthersMenu" Path="ItemsCount"/>
                </MultiBinding>
              </Button.IsVisible>
              <Image Source="Top_Menu.png" Stretch="Uniform" Margin="0,0,57,0"/>
            </Button>
          </-->
        </Grid>
      </DockPanel>
    </ControlTemplate>

  </Include.Resources>
</Include>
